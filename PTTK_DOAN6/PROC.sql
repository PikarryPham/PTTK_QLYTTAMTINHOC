-- Procedure

USE QLTINHOC_PTTK
GO

/*Kiểm tra tồn tại học viên*/
IF OBJECT_ID('KiemTraTonTaiMaHV') IS NOT NULL
	DROP FUNCTION KiemTraTonTaiMaHV
GO
CREATE FUNCTION KiemTraTonTaiMaHV (@IDHV INT)
RETURNS INT
AS
BEGIN
	DECLARE @CHECK INT = 1; --true
	IF(@IDHV IS NULL)
	BEGIN
		SET @CHECK = 0;
	END
	IF(NOT EXISTS (SELECT * FROM NGUOIDANGKYTHI WHERE NGUOIDANGKYTHI.NDKT_ID = @IDHV AND NDKT_LOAI = N'Học Viên'))
	BEGIN
		SET @CHECK = 1;
	END
	RETURN @CHECK
END
GO

/*Xem danh sách các kỳ thi CCQT*/
IF OBJECT_ID('LayDanhSachHocVien','P') IS NOT NULL
	DROP PROC LayDanhSachHocVien
GO
CREATE PROC LayDanhSachHocVien
@RETURNCODE INT OUTPUT, 
@RETURNMESS NVARCHAR(100) OUTPUT
AS
BEGIN TRANSACTION
	BEGIN TRY
		SELECT NDKT_ID,NDKT_TEN,NDKT_CMND,NDKT_GTINH,NDKT_DCHI,NDKT_EMAIL,NDKT_SDT FROM NGUOIDANGKYTHI WHERE NDKT_LOAI = N'Học Viên';
	END TRY
	BEGIN CATCH
		SET @RETURNCODE = 1;
		SET @RETURNMESS =  N'Có lỗi xảy ra'
		ROLLBACK TRANSACTION;
	END CATCH
COMMIT TRANSACTION

DECLARE @CODE INT, @MESS NVARCHAR(100)
EXEC LayDanhSachHocVien @RETURNCODE = @CODE OUTPUT, @RETURNMESS = @MESS OUTPUT ; 
SELECT @MESS AS N'Thông báo';
GO

-- Thêm học viên mới 
IF OBJECT_ID('ThemHocVienMoi','P') IS NOT NULL
	DROP PROC ThemHocVienMoi
GO

CREATE PROC ThemHocVienMoi
(
@CMND VARCHAR(20) = NULL,
@TENHV NVARCHAR(100) = NULL,
@DIACHI NVARCHAR(100) = NULL,
@EMAIL VARCHAR(100) = NULL,
@GTINH NVARCHAR(20) = NULL,
@SDT VARCHAR(20) = NULL,
@RETURNCODE INT OUTPUT, 
@RETURNMESS NVARCHAR(100) OUTPUT
)
AS 
BEGIN TRANSACTION
	BEGIN TRY 
		DECLARE @ID_HV INT = (SELECT COUNT(*) FROM NGUOIDANGKYTHI) + 1;
		IF(@CMND = '' OR @TENHV = '' OR @DIACHI = '' OR @EMAIL = '' OR @GTINH = '' OR @SDT = '')
		BEGIN
			SET @RETURNCODE  = 1;
			SET @RETURNMESS =  N'Vui lòng điền đầy đủ thông tin';
			ROLLBACK TRANSACTION;
			RETURN;
		END

		IF @CMND IN (SELECT NDKT_CMND FROM NGUOIDANGKYTHI)
		BEGIN 
			SET @RETURNCODE  = 1;
			SET @RETURNMESS = N'Số CMND này đã được đăng ký';
			ROLLBACK TRANSACTION;
			RETURN;
		END 

		IF @EMAIL IN (SELECT NDKT_EMAIL FROM NGUOIDANGKYTHI)
		BEGIN 
			SET @RETURNCODE  = 1;
			SET @RETURNMESS = N'Email này đã được đăng ký';
			ROLLBACK TRANSACTION;
			RETURN;
		END 

		IF @GTINH NOT IN (N'Nam',N'Nữ') 
		BEGIN 
			SET @RETURNCODE  = 1;
			SET @RETURNMESS = N'Vui lòng chọn giới tính là Nam hoặc Nữ';
			ROLLBACK TRANSACTION;
			RETURN;
		END 

		-- Thêm học viên mới
		DECLARE @LOAI NVARCHAR(20) = N'Học Viên';
		INSERT INTO dbo.NGUOIDANGKYTHI(NDKT_ID, NDKT_CMND, NDKT_TEN, NDKT_DCHI, NDKT_EMAIL, NDKT_GTINH, NDKT_LOAI, NDKT_SDT)
		VALUES  (@ID_HV, @CMND, @TENHV, @DIACHI, @EMAIL, @GTINH, @LOAI, @SDT);
		-- Hiển thị thông tin học viên
		SELECT NDKT_ID, NDKT_TEN, NDKT_CMND, NDKT_GTINH, NDKT_DCHI, NDKT_EMAIL, NDKT_SDT
		FROM NGUOIDANGKYTHI
		WHERE NDKT_ID = @ID_HV 
	END TRY
	BEGIN CATCH
		SET @RETURNCODE = 1;
		SET @RETURNMESS =  N'Có lỗi xảy ra'
		ROLLBACK TRANSACTION;
	END CATCH
	SET @RETURNCODE = 0;
	SET @RETURNMESS =  N'Thêm học viên mới thành công!'
COMMIT TRANSACTION

DECLARE @CODE INT, @MESS NVARCHAR(100)
EXEC ThemHocVienMoi @CMND = '321743122', -- nvarchar(20)
    @TENHV = N'Ngô Ái Vân', -- nvarchar(100)
    @DIACHI = N'TPHCM', -- nvarchar(100)
    @EMAIL = 'navan@gmail.com', -- varchar(100)
    @GTINH = N'Nữ', -- nvarchar(20)
    @SDT = '0328111222', -- varchar(20)
    @RETURNCODE = @CODE OUTPUT, -- int
    @RETURNMESS = @MESS OUTPUT -- nvarchar(100)
SELECT @MESS AS N'Thông báo';
DELETE FROM NGUOIDANGKYTHI WHERE NDKT_ID = 16;
GO

-- Sửa thông tin học viên
IF OBJECT_ID('SuaThongTinHocVien','P') IS NOT NULL
	DROP PROC SuaThongTinHocVien
GO

CREATE PROC SuaThongTinHocVien
(
@ID_HV INT = NULL,
@CMND VARCHAR(20) = NULL,
@TENHV NVARCHAR(100) = NULL,
@DIACHI NVARCHAR(100) = NULL,
@EMAIL VARCHAR(100) = NULL,
@GTINH NVARCHAR(20) = NULL,
@SDT VARCHAR(20) = NULL,
@RETURNCODE INT OUTPUT, 
@RETURNMESS NVARCHAR(100) OUTPUT
)
AS 
BEGIN TRANSACTION
	BEGIN TRY 
		IF(@ID_HV = '' OR @ID_HV IS NULL)
		BEGIN
			SET @RETURNCODE  = 1;
			SET @RETURNMESS =  N'Vui lòng điền vào ID của học viên';
			ROLLBACK TRANSACTION;
			RETURN;
		END

		IF(NOT EXISTS (SELECT * FROM NGUOIDANGKYTHI WHERE NDKT_ID = @ID_HV AND NDKT_LOAI = N'Học Viên'))
		BEGIN
			SET @RETURNCODE  = 1;
			SET @RETURNMESS =  N'Không tồn tại ID của học viên này';
			ROLLBACK TRANSACTION;
			RETURN;
		END

		-- Cập nhật thông tin của học viên trên
		IF(@CMND IS NOT NULL OR @CMND != '')
		BEGIN
			UPDATE NGUOIDANGKYTHI
			SET NDKT_CMND = @CMND
			WHERE NDKT_ID = @ID_HV
		END 
		IF(@TENHV IS NOT NULL OR @TENHV != '')
		BEGIN
			UPDATE NGUOIDANGKYTHI
			SET NDKT_TEN = @TENHV
			WHERE NDKT_ID = @ID_HV
		END
		IF(@GTINH IS NOT NULL OR @GTINH != '')
		BEGIN
			UPDATE NGUOIDANGKYTHI
			SET NDKT_GTINH = @GTINH
			WHERE NDKT_ID = @ID_HV
		END
		IF(@DIACHI IS NOT NULL OR @DIACHI != '')
		BEGIN
			UPDATE NGUOIDANGKYTHI
			SET NDKT_DCHI = @DIACHI
			WHERE NDKT_ID = @ID_HV
		END
		IF(@EMAIL IS NOT NULL OR @EMAIL != '')
		BEGIN
			UPDATE NGUOIDANGKYTHI
			SET NDKT_EMAIL = @EMAIL
			WHERE NDKT_ID = @ID_HV
		END
		IF(@SDT IS NOT NULL OR @SDT != '')
		BEGIN
			UPDATE NGUOIDANGKYTHI
			SET NDKT_SDT = @SDT
			WHERE NDKT_ID = @ID_HV
		END
	END TRY
	BEGIN CATCH
		SET @RETURNCODE = 1;
		SET @RETURNMESS =  N'Có lỗi xảy ra'
		ROLLBACK TRANSACTION;
	END CATCH
	SET @RETURNCODE = 0;
	SET @RETURNMESS =  N'Cập nhật thông tin học viên thành công!'
COMMIT TRANSACTION

DECLARE @CODE INT, @MESS NVARCHAR(100)
EXEC SuaThongTinHocVien 
	@ID_HV = 16,
	@CMND = '321743122', -- nvarchar(20)
    @TENHV = N'Ngô Ái Vân', -- nvarchar(100)
    @DIACHI = N'TPHCM', -- nvarchar(100)
    @EMAIL = 'navan@gmail.com', -- varchar(100)
    @GTINH = N'Nữ', -- nvarchar(20)
    @SDT = '0328111222', -- varchar(20)
    @RETURNCODE = @CODE OUTPUT, -- int
    @RETURNMESS = @MESS OUTPUT -- nvarchar(100)
SELECT @MESS AS N'Thông báo';



